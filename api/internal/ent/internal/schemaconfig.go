// Code generated by ent, DO NOT EDIT.

package internal

import "context"

// SchemaConfig represents alternative schema names for all tables
// that can be passed at runtime.
type SchemaConfig struct {
	Moderator                  string // Moderator table.
	Reminder                   string // Reminder table.
	Todo                       string // Todo table.
	TodoReminders              string // Todo-reminders->Reminder table.
	TodoGroup                  string // TodoGroup table.
	TodoGroupTodos             string // TodoGroup-todos->Todo table.
	TodoReminder               string // TodoReminder table.
	TodoToTodoGroupAssociation string // TodoToTodoGroupAssociation table.
	User                       string // User table.
	UserModerators             string // User-moderators->User table.
}

type schemaCtxKey struct{}

// SchemaConfigFromContext returns a SchemaConfig stored inside a context, or empty if there isn't one.
func SchemaConfigFromContext(ctx context.Context) SchemaConfig {
	config, _ := ctx.Value(schemaCtxKey{}).(SchemaConfig)
	return config
}

// NewSchemaConfigContext returns a new context with the given SchemaConfig attached.
func NewSchemaConfigContext(parent context.Context, config SchemaConfig) context.Context {
	return context.WithValue(parent, schemaCtxKey{}, config)
}
